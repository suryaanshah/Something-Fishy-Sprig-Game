/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: 
@author: 
@tags: []
@addedOn: 2024-00-00
*/

const net = "n";
const wall = "w";
const fish = "f";
const fish2 = "2";


setLegend(
  [ net, bitmap`
................
.00.00.00.00.00.
................
.0............0.
.0............0.
................
.0............0.
.0............0.
................
.0............0.
.0............0.
................
.0............0.
.0............0.
................
.00.00.00.00.00.`],
  [ wall, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`],
  [ fish, bitmap`
................
................
........77......
..7...77..7.....
.5.7.7.....57...
..5.5..H...5.7..
...5...H...5.07.
...5...H...5..7.
..5.5..H...5.7..
.5.7.7.....57...
..7...77..7.....
........77......
................
................
................
................`],
  [ fish2, bitmap`
................
................
................
.755...55555....
77575.55555555..
.7577555555225..
..5555755552055.
.757755577555555
77575.5577775333
.755...555555...
................
................
................
................
................
................`],
)

setSolids([])


// The fish should move faster than the net, so gravity Interval should be bigger.
intervalTime = 300;
gravityIntervalTime = 700;

let level = 0
const levels = [
  map`
w.w
w.w
wfw
w.w
w.w
w.w
wnw
w.w
w.w
w.w
w.w
w.w
w.w`
]

setMap(levels[level]);

function gameLoop() {
  let numMoves = getRandomInt(1, 5);
  let directionMoves = getRandomSign();
  moveFish(numMoves, directionMoves);
  gravityNet();
  
}

onInput("s", () => {
  gameLoop();
});

onInput("w", () => {
  getFirst(net).y -= 1; 
});


function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min) + min);
}

function getRandomSign() {
    return Math.random() < 0.5 ? -1 : +1;
}

function moveFish(numMoves, directionMoves) {
    moveCount = 0;
  const moveInterval = setInterval(() => {
    getFirst(fish).y += 1 * directionMoves; // move the fish
    moveCount++; // increment number of times the fish has moved

    if (moveCount >= numMoves) {
      clearInterval(moveInterval);
    }
  }, intervalTime);
}

function gravityNet() {
  getFirst(net).y += 1; // positive y is downwards
    setTimeout(gravityNet, gravityIntervalTime);
}




