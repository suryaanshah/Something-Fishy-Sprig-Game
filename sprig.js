/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: 
@author: 
@tags: []
@addedOn: 2024-00-00
*/

const s = "s";
const c = "c";
const o = "o";
const r = "r";
const e = "e";


const net = "n";
const wall = "w";
const fish = "f";
const fish2 = "2";
const water = "w";



setLegend(
//   [ net, bitmap`
// ................
// .00.00.00.00.00.
// ................
// .0............0.
// .0............0.
// ................
// .0............0.
// .0............0.
// ................
// .0............0.
// .0............0.
// ................
// .0............0.
// .0............0.
// ................
// .00.00.00.00.00.`],
  [ net, bitmap`
0.0.0.0.0.0.0.0.
.0.0.0.0.0.0.0.0
0.............0.
.0.............0
0.............0.
.0.............0
0.............0.
.0.............0
0.............0.
.0.............0
0.............0.
.0.............0
0.............0.
.0.............0
0.0.0.0.0.0.0.0.
.0.0.0.0.0.0.0.0`],
  [ wall, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`],
  [ fish2, bitmap`
................
................
........77......
..7...77..7.....
.5.7.7.....57...
..5.5..H...5.7..
...5...H...5.07.
...5...H...5..7.
..5.5..H...5.7..
.5.7.7.....57...
..7...77..7.....
........77......
................
................
................
................`],
  [ fish, bitmap`
................
................
................
.833...33333....
88385.33333333..
.8388333333223..
..3333833332033.
.838833388333333
88385.3388883DDD
.833...333333...
................
................
................
................
................
................`],
  [ water, bitmap`
7777777777777777
7777777777777777
7575757775757577
7757577757575777
7777777777777777
7777777777777777
7777575757777777
7777757575777777
7777777777777777
7777777777777777
7757575777575777
7575757775757577
7777777777777777
7777775757777777
7777757575777777
7777777777777777`],

  [s, bitmap`
................
................
....0000000.....
....0...........
....0...........
....0...........
....0...........
....0000000.....
..........0.....
..........0.....
..........0.....
..........0.....
....0000000.....
................
................
................`],
  [c, bitmap`
................
................
...0000000000...
...0............
...0............
...0............
...0............
...0............
...0............
...0............
...0............
...0000000000...
................
................
................
................`],
  [o, bitmap`
................
................
...0000000000...
...0........0...
...0........0...
...0........0...
...0........0...
...0........0...
...0........0...
...0........0...
...0........0...
...0........0...
...0000000000...
................
................
................`],
  [r, bitmap`
................
................
....0...00000...
....0..0........
....0.0.........
....00..........
....0...........
....0...........
....0...........
....0...........
....0...........
....0...........
....0...........
................
................
................`],
  [e, bitmap`
................
................
....0000000.....
....0......0....
....0......0....
....0......0....
....0000000.....
....0...........
....0...........
....0...........
....0...........
....0...........
.....0000000....
................
................
................`],
  
  
)

// The fish should move faster than the net, so gravity Interval should be bigger.
fishIntervalTime = 300;
fishDelayTime = 1000;
gravityIntervalTime = 700;

let level = 0
const levels = [
  map`
ww.ww
ww.ww
wwfww
ww.ww
ww.ww
ww.ww
wwnww
ww.ww
ww.ww
ww.ww
ww.ww
ww.ww
ww.ww`
]

setMap(levels[level]);
setBackground(water);

function gameLoop() {
  moveFish();
  gravityNet();
}

// s for start
onInput("s", () => {
  gameLoop();
});

// w for moving up
onInput("w", () => {
  getFirst(net).y -= 1; 
});

// j for reset


function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min) + min);
}

function getRandomSign() {
    return Math.random() < 0.5 ? -1 : +1;
}

function moveFish() {
  let numMoves = getRandomInt(1, 5);
  let directionMoves = getRandomSign();
  
  moveCount = 0;
  const moveInterval = setInterval(() => {
    getFirst(fish).y += 1 * directionMoves; // move the fish
    moveCount++; // increment number of times the fish has moved

    if (moveCount >= numMoves) {
      clearInterval(moveInterval);
      setTimeout(moveFish, fishDelayTime);
    }
  }, fishIntervalTime);
}

function gravityNet() {
  getFirst(net).y += 1; // positive y is downwards
    setTimeout(gravityNet, gravityIntervalTime);
}




